@model BarberSalonPrototype.Controllers.ServicesViewModel

@{
    ViewData["Title"] = "Our Services";
}

<!-- Hero Section -->
<section class="hero-section">
    <div class="container">
        <div class="text-center">
            <h1 class="hero-title">Hair and Nail Studio ‚Äì Services List</h1>
            <p class="hero-subtitle">Professional services for men and women</p>
        </div>
    </div>
</section>

<!-- Services Section -->
<section class="section-padding">
    <div class="container">
        <!-- Category Filter -->
        <div class="row mb-4">
            <div class="col-md-4">
                <select class="form-select category-filter" id="categoryFilter">
                    <option value="">All Categories</option>
                    @foreach (var category in Model.Categories)
                    {
                        <option value="@category" selected="@(Model.SelectedCategory == category)">
                            @switch (category)
                            {
                                case ServiceCategory.HairServicesMen:
                                    <text>üíá‚Äç‚ôÇÔ∏è Hair Services - Men</text>
                                    break;
                                case ServiceCategory.HairServicesWomen:
                                    <text>üíá‚Äç‚ôÄÔ∏è Hair Services - Women</text>
                                    break;
                                case ServiceCategory.NailServices:
                                    <text>üíÖ Nail Services</text>
                                    break;
                                case ServiceCategory.SkinBeautyServices:
                                    <text>üßñ‚Äç‚ôÄÔ∏è Skin & Beauty Services</text>
                                    break;
                                case ServiceCategory.AddonsExtras:
                                    <text>üß¥ Add-ons & Extras</text>
                                    break;
                            }
                        </option>
                    }
                </select>
            </div>
        </div>

        @{
            var servicesByCategory = Model.Services.GroupBy(s => s.Category).OrderBy(g => g.Key);
        }

        @foreach (var categoryGroup in servicesByCategory)
        {
            <div class="category-section mb-5" data-category="@categoryGroup.Key">
                <!-- Category Header -->
                <div class="category-header mb-4">
                    <h2 class="category-title">
                        @switch (categoryGroup.Key)
                        {
                            case ServiceCategory.HairServicesMen:
                                <span>üíá‚Äç‚ôÇÔ∏è Hair Services ‚Äì Men</span>
                                break;
                            case ServiceCategory.HairServicesWomen:
                                <span>üíá‚Äç‚ôÄÔ∏è Hair Services ‚Äì Women</span>
                                break;
                            case ServiceCategory.NailServices:
                                <span>üíÖ Nail Services</span>
                                break;
                            case ServiceCategory.SkinBeautyServices:
                                <span>üßñ‚Äç‚ôÄÔ∏è Skin & Beauty Services</span>
                                break;
                            case ServiceCategory.AddonsExtras:
                                <span>üß¥ Add-ons & Extras</span>
                                break;
                        }
                    </h2>
                    <hr class="category-divider">
                </div>

                <!-- Services Grid for this category -->
                <div class="row g-4">
                    @foreach (var service in categoryGroup.OrderBy(s => s.SortOrder))
                    {
                        <div class="col-lg-4 col-md-6 col-sm-12 service-item" data-category="@service.Category">
                            <div class="service-card">
                                <img src="@service.ImageUrl" alt="@service.Name" class="img-fluid">
                                <div class="service-card-body">
                                    <h5 class="service-title">@service.Name</h5>
                                    <p class="service-description">@service.Description</p>
                                    <div class="d-flex justify-content-between align-items-center">
                                        <span class="service-price">@service.Price</span>
                                        <div class="service-actions">
                                            <span class="service-duration">@service.DurationMinutes min</span>
                                            <a href="@Url.Action("Index", "Booking")" class="btn btn-outline-primary btn-sm ms-2">Book</a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }

        @if (!Model.Services.Any())
        {
            <div class="row">
                <div class="col-12 text-center py-5">
                    <h4 class="text-muted">No services available at the moment</h4>
                    <p class="text-muted">Please check back later or contact us for more information</p>
                </div>
            </div>
        }
    </div>
</section>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const categoryFilter = document.getElementById('categoryFilter');
            const categorySection = document.querySelectorAll('.category-section');

            categoryFilter.addEventListener('change', function() {
                const selectedCategory = this.value;
                
                categorySection.forEach(function(section) {
                    const sectionCategory = section.getAttribute('data-category');
                    
                    if (selectedCategory === '' || sectionCategory === selectedCategory) {
                        section.style.display = 'block';
                        section.classList.add('fade-in');
                    } else {
                        section.style.display = 'none';
                        section.classList.remove('fade-in');
                    }
                });
            });
        });
    </script>
} 